name: GitHub Release Workflow

on:
  push:
    branches: [main]

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create Google Play Service Account JSON file
        run: echo '${{ secrets.FIREBASE_GOOGLE_SERVICE_JSON }}' | base64 -d > app/google-services.json

      - name: Run unit tests
        run: ./gradlew clean test

  build-and-deploy-to-github:
    name: Build and GitHub Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create Google Play Service Account JSON file
        run: echo '${{ secrets.FIREBASE_GOOGLE_SERVICE_JSON }}' | base64 -d > app/google-services.json

      - name: Create Release Directory (APK)
        run: mkdir -p app/release/apk

      - name: Create Release Directory (ABB)
        run: mkdir -p app/release/abb

      - name: Generate version name
        id: version
        run: |
          # Get the current year and month in YY.MM format
          YEAR_MONTH=$(date +'%y.%m')

          # Count number of tags that start with the current YY.MM
          TAG_COUNT=$(git tag -l "$YEAR_MONTH.*" | wc -l)
          # Increment tag count by 1 (or set to 1 if no matching tags exist)
          TAG_VERSION=$((TAG_COUNT + 1))

          # Create version name in format YY.MM.TAG.VERSION_CODE
          VERSION_NAME="${YEAR_MONTH}.${TAG_VERSION}.${{ github.run_number }}"

          echo "year_month=$YEAR_MONTH" >> $GITHUB_OUTPUT
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Version name: $VERSION_NAME"

      - name: Version Bump
        uses: chkfung/android-version-actions@v1.2.3
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}
          versionName: ${{ steps.version.outputs.version_name }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Copy APK to release directory
        run: cp app/build/outputs/apk/release/*.apk app/release/apk/app-release.apk

      - name: Build ABB
        run: ./gradlew bundleRelease

      - name: Copy ABB to release directory
        run: cp app/build/outputs/bundle/release/*.aab app/release/abb/app-release.aab

      - name: Sign Android Release (ABB)
        uses: r0adkll/sign-android-release@v1
        id: sign_abb
        with:
          releaseDirectory: app/release/abb
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEYSTORE }}
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS_PASSWORD }}

      - name: Install Android Build Tools 29.0.3
        run: sdkmanager "build-tools;29.0.3"

      - name: Sign Android Release (APK)
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/release/apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEYSTORE }}
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS_PASSWORD }}

      - name: Copy signed apk and abb to release directory
        run: |
          cp app/release/apk/app-release-signed.apk app/release/app-release.apk
          cp ${{ steps.sign_abb.outputs.signedReleaseFile }} app/release/app-release.aab

      - name: Debug Release Files
        run: |
          echo "SIGNED_RELEASE_FILE: app/release/app-release.abb"
          echo "SIGNED_RELEASE_FILE: app/release/app-release.apk"
          echo "Files in app/release/abb:"
          ls -la app/release/apk/
          ls -la app/release/abb/
          ls -la app/release/
          echo "Files in app directory:"
          ls -la app/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version_name }}
          name: v${{ steps.version.outputs.version_name }}
          draft: false
          release: false
          body: |
            Release version ${{ steps.version.outputs.version_name }}
            
            Changes in this release:
            - Automatic build from GitHub Actions
            - Build number: ${{ github.run_number }}
            - Year.Month: ${{ steps.version.outputs.year_month }}
            - Tag version: ${{ steps.version.outputs.tag_version }}
          files: |
            ${{ steps.sign_abb.outputs.signedReleaseFile }}
            ${{ steps.sign_app.outputs.signedReleaseFile }}
